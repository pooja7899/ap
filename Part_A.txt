1..YAGI-UDA ANTENNA
clc;
clear;
N = 5;                   // Number of elements (1 reflector + 1 driven + 3 directors)
efficiency = 0.85;       // Antenna efficiency (0 to 1)
lambda = 1;              // Normalized wavelength

// Element positions along z-axis (in wavelengths)
z = [-0.22, 0, 0.16, 0.38, 0.60]; // Reflector, driven, directors

// Wave number
k = 2*%pi / lambda;

D_linear = 1.5 * N;       
D_dBi = 10 * log10(D_linear);
Gain_dBi = 10*log10(efficiency * D_linear);

// Display results
disp("Number of elements: " + string(N));
disp("Estimated Directivity (dBi): " + string(D_dBi));
disp("Estimated Gain (dBi): " + string(Gain_dBi));


// Radiation Pattern Calculation (Array Factor)
theta = 0:0.001:2*%pi;           // Angle range
AF = zeros(1,length(theta));     // Initialize array factor

for n = 1:N
    AF = AF + exp(%i * k * z(n) * cos(theta));
end

E_theta = abs(AF);               // Magnitude of array factor
E_theta = E_theta / max(E_theta); // Normalize

// Plot Polar Radiation Pattern
polarplot(theta, E_theta);
title("Yagi-Uda Antenna Radiation Pattern (Array Factor)");





2.2.Folded dipole antenna

clc;
clear;
clf;

// Folded Dipole Antenna Parameters
lambda = 1;                // Normalized wavelength
L = lambda/2;              // Approx. half-wave folded dipole
theta = 0:0.001:%pi;       // Theta range
k = 2*%pi/lambda;          // Wave number

// Radiation Pattern Calculation
Etheta = cos((%pi/2)*cos(theta)) ./ sin(theta);

// Replace NaN and Inf with 0
Etheta(isnan(Etheta)) = 0;
Etheta(isinf(Etheta)) = 0;

// Normalize
Etheta = Etheta / max(Etheta);

// Power pattern
Ptheta = (Etheta).^2;


// Directivity Calculation
dtheta = theta(2) - theta(1);
Prad = 2*%pi * inttrap(theta, Ptheta .* sin(theta));

Umax = max(Ptheta);

// Directivity
D = 4*%pi*Umax / Prad;
D_dBi = 10*log10(D);

// Assume efficiency
eta = 0.9;
G = eta * D;
G_dBi = 10*log10(G);


// Display Results

disp("Folded Dipole Antenna Performance:");
disp("Directivity (linear): " + string(D));
disp("Directivity (dBi): " + string(D_dBi));
disp("Gain (linear): " + string(G));
disp("Gain (dBi): " + string(G_dBi));


// Plot Radiation Pattern
polarplot(theta, Ptheta);
title("Folded Dipole Antenna Radiation Pattern (Normalized)");






3.3. LOOP ANTENNA
// Physical constants
c = 3e8; // Speed of light in m/s
mu0 = 4* %pi * 1e-7; // Permeability of free space
eps0 = 1/(mu0 * c^2); // Permittivity of free space

// Antenna parameters (example for a small circular loop)
f = 100e6; // Operating frequency in Hz
lambda = c/f; // Wavelength in meters
a = 0.01 * lambda; // Radius of the loop (small compared to wavelength)
N = 1; // Number of turns
I0 = 1; // Assumed current amplitude in Amperes
// Theoretical maximum directivity for a small loop (assuming ideal conditions)
D_max = 1.64; // Approximately 1.64 for a small loop, or 1.5 for a small dipole

// Radiation resistance (simplified for a small loop)
Rr = 320 * %pi^2 * (N * %pi * a^2 / lambda^2)^2;

// Loss resistance (example, assumes some conductor loss)
Rl = 0.1; // Example value, depends on conductor material and size

// Radiation efficiency
e_rad = Rr / (Rr + Rl);

// Gain
G_max = e_rad * D_max;

disp("Maximum Directivity (D_max): " + string(D_max));
disp("Radiation Efficiency (e_rad): " + string(e_rad));
disp("Maximum Gain (G_max): " + string(G_max));

// Azimuthal angle (phi) in radians for 2D pattern in the plane of the loop
phi = linspace(0, 2*%pi, 360);
// Electric field magnitude in the far-field (simplified for a small loop)
E_phi = sin(phi); // Proportional to sin(theta) if theta is measured from loop axis

// Plotting the 2D radiation pattern
polarplot(phi, abs(E_phi));
title("Normalized Radiation Pattern of Small Loop Antenna (in loop plane)");





4.slot antenna

clc;
clear;

// Slot Antenna Parameters
lambda = 1;                   // Normalized wavelength
L = lambda/2;                 // Slot length ~ λ/2
theta = 0:0.001:%pi;          // Theta from 0 to π
k = 2*%pi/lambda;             // Wave number

// Radiation Pattern (E_theta)

E_theta = cos((%pi/2)*cos(theta)) ./ sin(theta);

// Handle NaN and Inf values
E_theta(isnan(E_theta)) = 0;
E_theta(isinf(E_theta)) = 0;

// Normalize pattern
E_norm = E_theta ./ max(E_theta);


// Directivity Calculation
U = E_norm.^2;                       // Power pattern
Prad = 2*%pi * inttrap(theta, U .* sin(theta)); // Total power using inttrap
Umax = max(U);                       // Max radiation intensity

D = (4*%pi*Umax) / Prad;
disp("Directivity (linear) = " + string(D));
disp("Directivity (dB) = " + string(10*log10(D)));


// Gain Calculation
eta = 1; // Efficiency
G = eta * D;
disp("Gain (linear) = " + string(G));
disp("Gain (dB) = " + string(10*log10(G)));


// Plot Radiation Pattern
polarplot(theta, E_norm);
title("Slot Antenna Normalized Radiation Pattern");



5.HALF-WAVE (Λ/2) DIPOLE: performance analysis in Scilab
// Computes directivity, gain (with user-set efficiency), and plots radiation pattern

clc; clear;

// -------------------- Parameters --------------------
eta = 0.95; // radiation efficiency (0..1). Set to 1 for ideal. Typical ~0.9–0.98
N   = 20000; // angular resolution

// θ is the polar (elevation) angle measured from +z (dipole along z)
eps = 1.0e-9;                      // avoid singularities at 0 and π
theta = linspace(eps, %pi - eps, N)'; 

// -------------------- Field and power patterns --------------------
// Thin λ/2 dipole normalized field (up to a constant factor)
F = cos((%pi/2)*cos(theta)) ./ sin(theta);

// Normalized power pattern (proportional to |F|^2), scaled so max = 1
P = abs(F).^2;
P = P ./ max(P);

// -------------------- Directivity (numerical) --------------------
// D = 4π * Umax / ∫∫ U(θ,φ) dΩ
// With azimuthal symmetry: D = 2 / ∫_0^π P(θ) sinθ dθ  (since P is normalized to Umax=1)
den = inttrap(theta, P .* sin(theta)); // numerical ∫ P(θ) sinθ dθ
D_lin  = 2.0 / den;          // directivity (linear)
D_dBi  = 10*log10(D_lin);    // directivity (dBi)

// -------------------- Gain --------------------
// G = η * D
G_lin = eta * D_lin;
G_dBi = 10*log10(G_lin);

// -------------------- Report --------------------
mprintf("Half-wave dipole analysis\n");
mprintf("------------------------\n");
mprintf("Efficiency (η):        %.4f\n", eta);
mprintf("Directivity (linear):  %.6f\n", D_lin);
mprintf("Directivity (dBi):     %.3f dBi\n", D_dBi);
mprintf("Gain (linear):         %.6f\n", G_lin);
mprintf("Gain (dBi):            %.3f dBi\n", G_dBi);
mprintf("\nReference (theory):    D ≈ 1.64 (≈ 2.15 dBi) for ideal λ/2 dipole\n");


Result:
Half-wave dipole analysis
------------------------
Efficiency (η):        0.9500
Directivity (linear):  1.640922
Directivity (dBi):     2.151 dBi
Gain (linear):         1.558876
Gain (dBi):            1.928 dBi

Reference (theory):    D ≈ 1.64 (≈ 2.15 dBi) for ideal λ/2 dipole


6.HELIX
clc;
clear;
clf;
// ==============================
// Helix Antenna Parameters
// ==============================
c = 3e8;                // Speed of light (m/s)
f = 1e9;                // Frequency = 1 GHz
lambda = c / f;         // Wavelength
C = lambda;             // Circumference of helix ≈ 1 λ (for axial mode)
a = C / (2 * %pi);      // Radius of helix
alpha = 13;             // Pitch angle in degrees
N = 10;                 // Number of turns
d = lambda/4;           // Spacing between turns
S = N * d;              // Total length of helix
k = 2 * %pi / lambda;   // Wave number
// ==============================
// Directivity Calculation (axial mode)
// Empirical formula: D ≈ 15 * N * (C^2 * S) / (λ^3)
// ==============================
D = 15 * N * (C^2 * S) / (lambda^3);
D_dBi = 10 * log10(D);
// Gain (assuming efficiency = 100%)
Gain_dBi = D_dBi;
// ==============================
// Radiation Pattern in Axial Mode
// E(θ) ≈ cos((π/2)*cos(θ)) / sin(θ) for typical antennas,
// but for helix in axial mode: maximum along θ = 0°
// We approximate side lobes for θ range
// ==============================
theta = 0.0001:0.001:%pi;  // avoid division by zero
E_theta = cos((%pi/2)*cos(theta)) ./ sin(theta);
// Normalize
E_norm = E_theta / max(E_theta);
P_theta = E_norm.^2;  // Power pattern
// ==============================
// Display Results
// ==============================
mprintf("Helix Antenna Parameters:\n");
mprintf("Frequency: %.2f GHz\n", f/1e9);
mprintf("Wavelength: %.4f m\n", lambda);
mprintf("Circumference: %.4f m\n", C);
mprintf("Radius: %.4f m\n", a);
mprintf("Number of Turns: %d\n", N);
mprintf("Pitch Angle: %.2f degrees\n", alpha);
mprintf("Total Length: %.4f m\n", S);
mprintf("Directivity (linear): %.2f\n", D);
mprintf("Directivity (dBi): %.2f dB\n", D_dBi);
mprintf("Gain (dBi): %.2f dB\n", Gain_dBi);


RESULT:
Helix Antenna Parameters:
Frequency: 1.00 GHz
Wavelength: 0.3000 m
Circumference: 0.3000 m
Radius: 0.0477 m
Number of Turns: 10
Pitch Angle: 13.00 degrees
Total Length: 0.7500 m
Directivity (linear): 375.00
Directivity (dBi): 25.74 dB
Gain (dBi): 25.74 dB


 7.PARABOLIC ANTENNA
// input parameters for the parabolic antenna
f = 10e9; // operating frequency (hz)
c = 3e8; // speed of light (m/s)
lambda = c / f; // wavelength (m)
d_diameter = 1; // dish diameter (m)
eta_aperture = 0.65; // aperture efficiency (dimensionless, typically 0.55 to 0.7)

gain_linear = eta_aperture * (%pi * d_diameter / lambda)^2;
gain_dbi = 10 * log10(gain_linear); // convert to dbi
disp("--- antenna gain ---");
disp(gain_linear, "linear gain:");
disp(gain_dbi, "gain (dbi):");

area_physical = %pi * (d_diameter / 2)^2;
area_effective = eta_aperture * area_physical;
directivity_linear = (4 * %pi * area_effective) / lambda^2;
disp("--- antenna directivity ---");
disp(directivity_linear, "linear directivity:");

theta = -%pi/2:0.01:%pi/2; 

u = (%pi * d_diameter / lambda) * sin(theta);
e_field_pattern = (sin(u) ./ u); 

pattern_db = 20 * log10(abs(e_field_pattern));

plot(theta * 180 / %pi, pattern_db);
xlabel("angle (degrees)");
ylabel("normalized power (db)");
title("parabolic antenna radiation pattern (e-plane)");

